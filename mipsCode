# PROGRAM: Project 2
.data
inputTooLong: .asciiz "Input is too long."
baseInvalid: .asciiz "Invalid base-34 number." 
inputEmpty: .asciiz "Input is empty."
stringInput: .space 40000
.text

main:
li $v0, 8  
la $a0, stringInput
li $a1, 40000
syscall
add $t1, $0, 0 
add $t3, $0, 0 
add $t7, $0, 2
la $t0, stringInput			
lb $t1,0($t0) 					
beq $t1, 10, emptyInputError 	
beq $t1, 0 emptyInputError
addi $s0, $0, 34 	
addi $t4, $0, 1 	
addi $t5, $0, 0 	
addi $t6, $0, 0

skipSpaces:
	lb $t1,0($t0)
	addi $t0, $t0, 1
	addi $t3, $t3, 1
	beq $t1, 32, skipSpaces
	beq $t1, 10, emptyInputError
	beq $t1, $0, emptyInputError
showChars:
	lb $t1,0($t0)
	addi $t0, $t0, 1
	addi $t3, $t3, 1
	beq $t1, 10, backToBeginning
	beq $t1, 0, backToBeginning
	bne $t1, 32, showChars
showCharsOrSpaces:
	lb $t1,0($t0)
	addi $t0, $t0, 1
	addi $t3, $t3, 1
	beq $t1, 10, backToBeginning
	beq $t1, 0, backToBeginning
	bne $t1, 32, invalidBaseError
	j showCharsOrSpaces
backToBeginning:
	sub $t0, $t0, $t3 	
	la $t3, 0 
advanceForward:
	lb $t1,0($t0)
	addi $t0, $t0, 1
	beq $t1, 32, advanceForward
	
addi $t0, $t0, -1

lengthFinder:
	lb $t1, ($t0)
	addi $t0, $t0, 1
	addi $t3, $t3, 1 
	beq $t1, 10, doMisc
	beq $t1, 0, doMisc
	beq $t1, 32, doMisc
	beq $t3, 5, longInputError

